[{"D:\\HighRadius\\d5d0ds\\frontend\\src\\index.js":"1","D:\\HighRadius\\d5d0ds\\frontend\\src\\App.js":"2","D:\\HighRadius\\d5d0ds\\frontend\\src\\serviceWorker.js":"3","D:\\HighRadius\\d5d0ds\\frontend\\src\\store\\mainStore.js":"4","D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\theme.js":"5","D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\constants.js":"6","D:\\HighRadius\\d5d0ds\\frontend\\src\\views\\CollectorDashboard.js":"7","D:\\HighRadius\\d5d0ds\\frontend\\src\\reducers\\invoiceReducer.js":"8","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\InvoiceList.js":"9","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\MainTable.js":"10","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\EditButton.js":"11","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\AddButton.js":"12","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\DeleteButton.js":"13","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\TemplateButton.js":"14","D:\\HighRadius\\d5d0ds\\frontend\\src\\actions\\invoiceAction.js":"15","D:\\HighRadius\\d5d0ds\\frontend\\src\\services\\services.js":"16","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\PredictButton.js":"17","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Error.js":"18","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\buttonHOC.js":"19","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\FormModel.js":"20","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\CorrespondenceTemplate.js":"21","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\DeleteForm.js":"22","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\AddForm.js":"23","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\EditForm.js":"24","D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\pdfGenerator.js":"25","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateOne.js":"26","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateTwo.js":"27","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\SnackBar.js":"28","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TableRowOptimized.js":"29","D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\formatter.js":"30","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateTable.js":"31"},{"size":783,"mtime":1649945711563,"results":"32","hashOfConfig":"33"},{"size":1360,"mtime":1649945845239,"results":"34","hashOfConfig":"33"},{"size":5210,"mtime":1649945673784,"results":"35","hashOfConfig":"33"},{"size":163,"mtime":1649945831437,"results":"36","hashOfConfig":"33"},{"size":524,"mtime":1643277102876,"results":"37","hashOfConfig":"33"},{"size":151,"mtime":1649945834221,"results":"38","hashOfConfig":"33"},{"size":1473,"mtime":1643277102877,"results":"39","hashOfConfig":"33"},{"size":2746,"mtime":1649945374390,"results":"40","hashOfConfig":"33"},{"size":5117,"mtime":1649946074336,"results":"41","hashOfConfig":"33"},{"size":9322,"mtime":1649946069048,"results":"42","hashOfConfig":"33"},{"size":1485,"mtime":1643277102861,"results":"43","hashOfConfig":"33"},{"size":1240,"mtime":1643277102860,"results":"44","hashOfConfig":"33"},{"size":1497,"mtime":1643277102861,"results":"45","hashOfConfig":"33"},{"size":1445,"mtime":1643277102862,"results":"46","hashOfConfig":"33"},{"size":1540,"mtime":1649946151237,"results":"47","hashOfConfig":"33"},{"size":1237,"mtime":1649945381183,"results":"48","hashOfConfig":"33"},{"size":1953,"mtime":1649949524679,"results":"49","hashOfConfig":"33"},{"size":1066,"mtime":1649946085036,"results":"50","hashOfConfig":"33"},{"size":1391,"mtime":1643277102862,"results":"51","hashOfConfig":"33"},{"size":1210,"mtime":1649946078919,"results":"52","hashOfConfig":"33"},{"size":7427,"mtime":1649946128064,"results":"53","hashOfConfig":"33"},{"size":3785,"mtime":1649946122345,"results":"54","hashOfConfig":"33"},{"size":19870,"mtime":1649946134754,"results":"55","hashOfConfig":"33"},{"size":8118,"mtime":1649946112825,"results":"56","hashOfConfig":"33"},{"size":3860,"mtime":1649945841975,"results":"57","hashOfConfig":"33"},{"size":1357,"mtime":1649946007042,"results":"58","hashOfConfig":"33"},{"size":1071,"mtime":1649945944931,"results":"59","hashOfConfig":"33"},{"size":1805,"mtime":1649946055076,"results":"60","hashOfConfig":"33"},{"size":6031,"mtime":1649946058585,"results":"61","hashOfConfig":"33"},{"size":2483,"mtime":1649945838618,"results":"62","hashOfConfig":"33"},{"size":2815,"mtime":1649945956393,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1vi67zt",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\HighRadius\\d5d0ds\\frontend\\src\\index.js",[],["133","134"],"D:\\HighRadius\\d5d0ds\\frontend\\src\\App.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\serviceWorker.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\store\\mainStore.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\theme.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\constants.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\views\\CollectorDashboard.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\reducers\\invoiceReducer.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\InvoiceList.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\MainTable.js",["135","136"],"import React, { useState, useEffect } from 'react';\r\nimport { CircularProgress, Checkbox } from '@material-ui/core';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n// import TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { getInvoiceAPI } from '../services/services';\r\nimport { formatter, dateFormatter, checkDueDate } from '../utils/formatter';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getInvoices, emptyInvoiceData, setChecked, emptyChecked } from '../actions/invoiceAction';\r\n// import { connect } from 'react-redux';\r\nimport TableRowOptimized from './TableRowOptimized';\r\nimport Error from './Error';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n        maxHeight: '64vh'\r\n    },\r\n    tableCell: {\r\n        borderBottom: '1px solid #283A46'\r\n    },\r\n    loadingDiv: {\r\n        height: \"10%\",\r\n        margin: 'auto',\r\n        paddingTop: '4%',\r\n        overflow: \"hidden\",\r\n        paddingBottom: '2%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    stickyHeader: {\r\n        backgroundColor: 'rgb(40, 58, 70) !important',\r\n    }\r\n}))\r\n\r\nconst columns = [\r\n    { id: 'checkbox', minWidth: 10 },\r\n    { id: 'name_customer', label: 'Customer Name', minWidth: 140 },\r\n    { id: 'cust_number', label: 'Customer \\u0023', minWidth: 70 },\r\n    {\r\n        id: 'invoice_id',\r\n        label: 'Bill \\u0023',\r\n        minWidth: 70,\r\n        align: 'right',\r\n        format: (value) => value,\r\n    },\r\n    {\r\n        id: 'total_open_amount',\r\n        label: 'Bill Amount',\r\n        minWidth: 100,\r\n        align: 'right',\r\n        format: (value) => formatter(value),\r\n    },\r\n    {\r\n        id: 'due_in_date',\r\n        label: 'Due Date',\r\n        minWidth: 80,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_payment_date',\r\n        label: 'Predicted Payment Date',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => dateFormatter(value),\r\n    },\r\n    {\r\n        id: 'predicted_aging_bucket',\r\n        label: 'Predicted Aging Bucket',\r\n        minWidth: 150,\r\n        align: 'right',\r\n        format: (value) => value,\r\n    },\r\n    {\r\n        id: 'notes',\r\n        label: 'Notes',\r\n        minWidth: 120,\r\n        align: 'right',\r\n        format: (value) => value.slice(0, 15) + \"...\",\r\n    },\r\n];\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color: \"#97A1A9\",\r\n        \"&$checked\": {\r\n            color: \"#14AFF1\",\r\n        },\r\n        \"&:hover\": {\r\n            background: \"none\",\r\n        }\r\n    },\r\n    checked: {\r\n\r\n    }\r\n})(Checkbox);\r\n\r\nfunction MainTable({ search, setSearch }) {\r\n    const classes = useStyles();\r\n    const invoiceData = useSelector(state => state.invoiceData);\r\n    const checked = useSelector(state => state.checked);\r\n    const dispatch = useDispatch();\r\n\r\n    const [isNext, setNext] = useState(false);\r\n    const [page, setPageCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        if (search.length === 0) {\r\n            dispatch(emptyChecked());\r\n            dispatch(emptyInvoiceData());\r\n            getInvoiceAPI(1)\r\n                .then(res => {\r\n                    console.log(\"running on page\", page);\r\n                    dispatch(getInvoices(res.data));\r\n                    setPageCount(page + 1);\r\n                    setNext(true);\r\n                });\r\n        } else {\r\n            if (page !== 1) {\r\n                setPageCount(1);\r\n            }\r\n            if (checked.length > 0) {\r\n                dispatch(emptyChecked());\r\n            }\r\n        }\r\n    }, [search])\r\n\r\n    const fetchMoreData = () => {\r\n        getInvoiceAPI(page)\r\n            .then(res => {\r\n                dispatch(getInvoices(res.data));\r\n                setNext(true)\r\n                setPageCount(page + 1);\r\n            });\r\n    }\r\n\r\n    const handleToggleAll = (e) => {\r\n        if (e.target.checked) {\r\n            const newSelecteds = invoiceData.map((invoice) => invoice.doc_id);\r\n            dispatch(setChecked(newSelecteds));\r\n            return;\r\n        }\r\n        dispatch(setChecked([]));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                search !== '' && invoiceData.length === 0 ?\r\n                    <Error setSearch={setSearch} />\r\n                    :\r\n                    <InfiniteScroll\r\n                        dataLength={invoiceData.length}\r\n                        hasMore={search === '' ? isNext : false}\r\n                        next={search === '' ? fetchMoreData : null}\r\n                        loader={\r\n                            <div className={classes.loadingDiv}>\r\n                                <CircularProgress style={{ color: '#14AFF1' }} />\r\n                                <p style={{ color: '#FFFFFF', fontSize: '0.8rem' }}>Loading</p>\r\n                            </div>\r\n                        }\r\n                        height='64vh'\r\n                        style={{\r\n                            width: '95.6vw'\r\n                        }}\r\n                    >\r\n                        <Table stickyHeader aria-label=\"simple table\">\r\n                            <TableHead style={{ fontSize: '0.8rem' }}>\r\n                                <TableRow>\r\n                                    {columns.map((column) => {\r\n                                        if (column.id === 'checkbox') {\r\n                                            return (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{\r\n                                                        minWidth: column.minWidth,\r\n                                                        paddingTop: '0rem',\r\n                                                        paddingBottom: '0.2rem',\r\n                                                    }}\r\n                                                    classes={{\r\n                                                        root: classes.tableCell,\r\n                                                        stickyHeader: classes.stickyHeader\r\n                                                    }}\r\n                                                >\r\n                                                    <CustomCheckbox\r\n                                                        edge=\"end\"\r\n                                                        onChange={(e) => handleToggleAll(e)}\r\n                                                        // checked={checked.indexOf(data[\"doc_id\"]) !== -1}\r\n                                                        disableRipple\r\n                                                        size=\"small\"\r\n                                                    />\r\n                                                </TableCell>\r\n                                            )\r\n                                        } else {\r\n                                            return (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{\r\n                                                        minWidth: column.minWidth,\r\n                                                        color: '#97A1A9', paddingTop: '0rem',\r\n                                                        paddingBottom: '0.2rem', fontSize: '0.85rem'\r\n                                                    }}\r\n                                                    classes={{\r\n                                                        root: classes.tableCell,\r\n                                                        stickyHeader: classes.stickyHeader\r\n                                                    }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            )\r\n                                        }\r\n                                    })}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody style={{ color: '#FFFFFF' }}>\r\n                                {invoiceData.map((data, index) => (\r\n                                    <TableRowOptimized data={data} index={index} key={data.doc_id}\r\n                                        checked={checked} />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </InfiniteScroll>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(MainTable);\r\n","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\EditButton.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\AddButton.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\DeleteButton.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\TemplateButton.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\actions\\invoiceAction.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\services\\services.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\PredictButton.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Error.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\Buttons\\buttonHOC.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\FormModel.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\CorrespondenceTemplate.js",["137"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TemplateOne from './TemplateOne';\r\nimport { getCorrespondenceData } from '../services/services';\r\nimport TemplateTwo from './TemplateTwo';\r\nimport { tablePDF } from '../utils/pdfGenerator';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    template_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '86vw',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px',\r\n    },\r\n    template_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    template_header_dropdown_div: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    formControl: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    template_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46',\r\n        color: '#C0C6CA',\r\n        fontSize: '0.85rem',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        height: '50vh',\r\n        overflow: 'auto'\r\n    },\r\n    template_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem',\r\n        paddingLeft: '2rem',\r\n    },\r\n    cancelBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '1rem',\r\n    },\r\n    downloadBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n    selectOutlined: {\r\n        background: '#283A46',\r\n        paddingTop: '0.5rem',\r\n        paddingBottom: '0.5rem',\r\n        fontSize: '0.85rem',\r\n        color: '#ffffff',\r\n    },\r\n    selectIcon: {\r\n        color: '#C0C6CA'\r\n    },\r\n    selectMenu: {\r\n        background: '#283A46',\r\n        color: '#ffffff',\r\n        \"& ul\": {\r\n            border: '1px solid #14AFF1',\r\n            borderRadius: '10px'\r\n        },\r\n        \"& li\": {\r\n            fontSize: '0.85rem',\r\n        },\r\n        \"& li:hover\": {\r\n            background: '#2A5368'\r\n        },\r\n    },\r\n    selected: {\r\n        backgroundColor: '#283A46 !important',\r\n        \"&:hover\": {\r\n            background: '#2A5368 !important'\r\n        }\r\n    },\r\n    selectOutline: {\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            borderColor: '#14AFF1 !important'\r\n        }\r\n    }\r\n}))\r\n\r\nconst CorrespondenceTemplate = React.forwardRef(({ handleClose }, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const [templateData, setTemplateData] = React.useState([]);\r\n\r\n    const [template, setTemplate] = React.useState(1);\r\n\r\n    const selected = useSelector(state => state.checked);\r\n\r\n    React.useEffect(() => {\r\n        getCorrespondenceData(selected)\r\n            .then((res) => {\r\n                setTemplateData(res.data);\r\n                console.log(res.data)\r\n            })\r\n    }, [])\r\n\r\n    const handleDropdownChange = (event) => {\r\n        setTemplate(event.target.value);\r\n    };\r\n\r\n    const handleDownload = () => {\r\n        tablePDF(templateData, template, total);\r\n    }\r\n\r\n    const total =\r\n        templateData.length > 0 ?\r\n            templateData.reduce((total, invoice) => total + invoice.total_open_amount, 0)\r\n            : 0;\r\n\r\n    return (\r\n        <div className={classes.template_main}>\r\n            <div className={classes.template_header}>\r\n                <h3 style={{ fontWeight: '400' }}>View Correspondence ({selected.length})</h3>\r\n                <div className={classes.template_header_dropdown_div}>\r\n                    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                        <label style={{ color: '#C0C6CA', fontSize: '0.85rem', marginRight: '1rem' }}>View: </label>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-outlined-label\"\r\n                            id=\"demo-simple-select-outlined\"\r\n                            value={template}\r\n                            onChange={handleDropdownChange}\r\n                            className={classes.selectOutline}\r\n                            classes={{\r\n                                outlined: classes.selectOutlined,\r\n                                icon: classes.selectIcon,\r\n                            }}\r\n                            MenuProps={{\r\n                                classes: {\r\n                                    paper: classes.selectMenu,\r\n                                },\r\n                                anchorOrigin: {\r\n                                    vertical: \"bottom\",\r\n                                    horizontal: \"left\"\r\n                                },\r\n                                transformOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\"\r\n                                },\r\n                                getContentAnchorEl: null\r\n                            }}\r\n                        >\r\n                            <MenuItem classes={{ selected: classes.selected }} value={1}>Template 1</MenuItem>\r\n                            <MenuItem classes={{ selected: classes.selected }} value={2}>Template 2</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <CloseIcon className={classes.closeIcon} onClick={handleClose} />\r\n                </div>\r\n            </div>\r\n            <div className={classes.template_body}>\r\n                {\r\n                    template === 1 ?\r\n                        <>\r\n                            <TemplateOne templateData={templateData} total={total} />\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <TemplateTwo templateData={templateData} />\r\n                        </>\r\n                }\r\n            </div>\r\n            <div className={classes.template_footer_btns}>\r\n                <Button\r\n                    className={classes.cancelBtn}\r\n                    variant=\"outlined\"\r\n                    onClick={handleClose}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    className={classes.downloadBtn}\r\n                    variant=\"contained\"\r\n                    onClick={handleDownload}\r\n                >\r\n                    Download\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default CorrespondenceTemplate\r\n","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\DeleteForm.js",["138"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteInvoice } from '../actions/invoiceAction';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport { deleteInvoiceAPI } from '../services/services';\r\nimport { emptyChecked } from '../actions/invoiceAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    delete_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '25rem',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px',\r\n    },\r\n    delete_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    delete_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46',\r\n        color: '#C0C6CA',\r\n        fontSize: '0.85rem',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n    },\r\n    delete_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem'\r\n    },\r\n    cancelBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '1rem',\r\n    },\r\n    deleteBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n}))\r\n\r\nconst DeleteForm = React.forwardRef(({ handleClose }, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const selected = useSelector(state => state.checked)\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        console.log(selected);\r\n    }, [])\r\n\r\n    const handleDelete = () => {\r\n        let payload = {\r\n            doc_ids: [...selected]\r\n        }\r\n        deleteInvoiceAPI(payload)\r\n            .then(() => {\r\n                dispatch(deleteInvoice(selected));\r\n                dispatch(emptyChecked());\r\n                handleClose();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.delete_main}>\r\n            <div className={classes.delete_header}>\r\n                <h3 style={{ fontWeight: '400' }}>Delete record(s)?</h3>\r\n                <CloseIcon className={classes.closeIcon} onClick={handleClose} />\r\n            </div>\r\n            <div className={classes.delete_body}>\r\n                <p>You'll lose your record(s) after this action. We can't recover them once you delete.</p>\r\n                <p> Are you sure you want to <span style={{ color: '#FF5E5E' }}>permanently delete</span> them?</p>\r\n            </div>\r\n            <div className={classes.delete_footer_btns}>\r\n                <Button\r\n                    className={classes.cancelBtn}\r\n                    variant=\"outlined\"\r\n                    onClick={handleClose}\r\n                >\r\n                    Cancel\r\n                </Button>\r\n                <Button\r\n                    className={classes.deleteBtn}\r\n                    variant=\"contained\"\r\n                    onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default DeleteForm;\r\n","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\AddForm.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\EditForm.js",["139"],"import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Button from '@material-ui/core/Button';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { InputAdornment } from '@material-ui/core';\r\nimport { editInvoice } from '../actions/invoiceAction';\r\nimport { putInvoiceAPI } from '../services/services';\r\nimport SnackBar from './SnackBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    edit_main: {\r\n        background: '#2A3E4C',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 'fit-content',\r\n        height: 'fit-content',\r\n        top: '50%',\r\n        left: '50%',\r\n        position: 'absolute',\r\n        transform: 'translate(-50%,-50%)',\r\n        color: '#FFFFFF',\r\n        borderRadius: '10px'\r\n    },\r\n    edit_header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        paddingLeft: '1rem',\r\n        paddingRight: '1rem',\r\n        alignItems: 'center',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    edit_body: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderBottom: '1.5px solid #283A46'\r\n    },\r\n    edit_body_inputs: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '1rem',\r\n        alignItems: 'flex-start',\r\n    },\r\n    edit_footer_btns: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '1rem',\r\n        alignItems: 'center',\r\n    },\r\n    label: {\r\n        color: '#97A1A9',\r\n        fontSize: '0.85rem'\r\n    },\r\n    cancelBtn: {\r\n        color: '#14AFF1',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        border: '10px',\r\n    },\r\n    resetBtn: {\r\n        borderColor: '#14AFF1',\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        marginRight: '0.5rem',\r\n    },\r\n    saveBtn: {\r\n        color: '#ffffff',\r\n        fontSize: '0.85rem',\r\n        textTransform: 'None',\r\n        borderRadius: '10px',\r\n        background: '#14AFF1',\r\n        \"&:hover\": {\r\n            background: '#14AFF1',\r\n        }\r\n    },\r\n    closeIcon: {\r\n        cursor: 'pointer',\r\n        fontSize: '1.3rem'\r\n    },\r\n    error: {\r\n        fontSize: '0.75rem',\r\n        color: 'red',\r\n        margin: 'auto'\r\n    },\r\n    inputRoot: {\r\n        fontSize: '0.85rem',\r\n        color: '#ffffff',\r\n    },\r\n    inputMarginDense: {\r\n        paddingTop: '0.3rem !important',\r\n        paddingBottom: '0.3rem !important',\r\n    },\r\n    inputNotch: {\r\n        borderColor: '#356680 !important',\r\n    }\r\n}))\r\n\r\nconst EditForm = React.forwardRef(({ handleClose }, ref) => {\r\n    const classes = useStyles();\r\n\r\n    const invoiceData = useSelector(state => state.invoiceData);\r\n    const selected = useSelector(state => state.checked);\r\n    const dispatch = useDispatch();\r\n\r\n    const [dataToEdit, setDataTOEdit] = React.useState({});\r\n    const [invoiceAmt, setInvoiceAmt] = React.useState('');\r\n    const [notes, setNotes] = React.useState('');\r\n    const [error, setError] = React.useState(false);\r\n\r\n    const [snackbarOpen, setSnackBarOpen] = React.useState(false);\r\n\r\n    const handleSBClose = () => {\r\n        setSnackBarOpen(false)\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        console.log(selected);\r\n        setDataTOEdit(invoiceData.find((obj) => obj.doc_id === selected[0]))\r\n    }, [])\r\n\r\n    const handleSave = () => {\r\n        let payload = {\r\n            doc_id: dataToEdit.doc_id,\r\n            total_open_amount: invoiceAmt ? invoiceAmt : dataToEdit.total_open_amount,\r\n            notes: notes ? notes : dataToEdit.notes\r\n        }\r\n        console.log(payload)\r\n        putInvoiceAPI(payload)\r\n            .then(res => {\r\n                dispatch(editInvoice(payload));\r\n                setError(false);\r\n                handleClose();\r\n            })\r\n            .catch((error) => {\r\n                setError(true);\r\n                setSnackBarOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setInvoiceAmt('');\r\n        setNotes('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.edit_main}>\r\n                <div className={classes.edit_header}>\r\n                    <h3 style={{ fontWeight: '400' }}>Edit Invoice</h3>\r\n                    <CloseIcon className={classes.closeIcon} onClick={handleClose} />\r\n                </div>\r\n                <div className={classes.edit_body}>\r\n                    <div className={classes.edit_body_inputs}>\r\n                        <label className={classes.label}>Bill Amount</label>\r\n                        <OutlinedInput\r\n                            id=\"amount\"\r\n                            value={invoiceAmt}\r\n                            onChange={(e) => setInvoiceAmt(e.target.value)}\r\n                            placeholder={Number(dataToEdit.total_open_amount).toString()}\r\n                            margin=\"dense\"\r\n                            style={{\r\n                                width: '13rem',\r\n                                marginLeft: '1rem',\r\n                                height: '2rem',\r\n                            }}\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                inputMarginDense: classes.inputMarginDense,\r\n                                notchedOutline: classes.inputNotch\r\n                            }}\r\n                            startAdornment={<InputAdornment disableTypography position=\"start\">$</InputAdornment>}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.edit_body_inputs}>\r\n                        <label className={classes.label}>Notes</label>\r\n                        <TextField\r\n                            id=\"notes\"\r\n                            multiline\r\n                            rows={4}\r\n                            value={notes}\r\n                            onChange={(e) => setNotes(e.target.value)}\r\n                            style={{\r\n                                width: '13rem'\r\n                            }}\r\n                            InputProps={{\r\n                                classes: {\r\n                                    root: classes.inputRoot,\r\n                                    inputMarginDense: classes.inputMarginDense,\r\n                                    notchedOutline: classes.inputNotch\r\n                                }\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            placeholder={dataToEdit.notes}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div >\r\n                    <div className={classes.edit_footer_btns}>\r\n                        <Button className={classes.cancelBtn} onClick={handleClose}>Cancel</Button>\r\n                        <div>\r\n                            <Button\r\n                                className={classes.resetBtn}\r\n                                variant=\"outlined\"\r\n                                onClick={handleReset}\r\n                            >\r\n                                Reset\r\n                            </Button>\r\n                            <Button\r\n                                className={classes.saveBtn}\r\n                                variant=\"contained\"\r\n                                onClick={handleSave}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {error\r\n                ? <SnackBar\r\n                    open={snackbarOpen}\r\n                    handleClose={handleSBClose}\r\n                    error=\"PLEASE ENTER VALID INPUTS\"\r\n                />\r\n                : <></>\r\n            }\r\n        </>\r\n    )\r\n})\r\n\r\nexport default EditForm;\r\n","D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\pdfGenerator.js",["140"],"import jsPDF from 'jspdf';\r\nimport autoTable from 'jspdf-autotable';\r\nimport { formatter } from './formatter';\r\n\r\n\r\nconst templateOne = (templateData, total) => {\r\n    var doc = new jsPDF();\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont('helvetica', \"normal\");\r\n\r\n    doc.text(\"Subject: Invoice Details - HighRadius\", 10, 20);\r\n\r\n    doc.text(\"Dear Sir/Madam,\", 10, 35);\r\n    doc.text(\"Greetings!\", 10, 43);\r\n\r\n    doc.text(\"This is to remind you that there are one or more open invoices on your account. lease \", 10, 58);\r\n    doc.text(\"provide at your earliest convenience an update on the payment details or clarify the \", 10, 66);\r\n    doc.text(\"reason for the delay. If you have any specific issue with the invoice(s), please let us \", 10, 74);\r\n    doc.text(\"know so that we can address it to the correct Department.\", 10, 82);\r\n    doc.text(\"Please find the details of the invoices below:\", 10, 97);\r\n\r\n    autoTable(doc, {\r\n        html: '#correspondence-table',\r\n        theme: 'striped',\r\n        styles: {\r\n            fontSize: 12\r\n        },\r\n        margin: {\r\n            left: 10,\r\n        },\r\n        startY: 110\r\n    });\r\n\r\n    var finalY = doc.lastAutoTable.finalY;\r\n    var pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n    doc.text(`Total Amount to be Paid: $${formatter(total)}`, 10, finalY + 10);\r\n\r\n    console.log(finalY);\r\n    console.log(pageHeight);\r\n\r\n    doc.text(\"In case you have already made a payment for the above items, please send us the details\", 10, finalY + 25);\r\n    doc.text(\"to ensure the payment is posted.\", 10, finalY + 33);\r\n    doc.text(\"Let us know if we can be of any further assistance. Looking forward to hearing from you.\", 10, finalY + 41);\r\n\r\n    doc.text(\"Kind Regards,\", 10, finalY + 56);\r\n    doc.text(\"D5D0Ds\", 10, finalY + 64);\r\n    doc.text(\"Phone : XXXXXXXXXX\", 10, finalY + 72);\r\n    doc.text(\"Fax : --\", 10, finalY + 80);\r\n    doc.text(\"Email : XXXXXXX@XXXX.XX.XX\", 10, finalY + 88);\r\n    doc.text(\"HighRadius\", 10, finalY + 96);\r\n\r\n    doc.save('template1.pdf');\r\n}\r\n\r\nconst templateTwo = (templateData) => {\r\n    var doc = new jsPDF();\r\n\r\n    doc.setFontSize(14);\r\n    doc.setFont('helvetica', \"normal\");\r\n\r\n    doc.text(\"Subject: Invoice Details - HighRadius\", 10, 20);\r\n\r\n    doc.text(\"Dear Sir/Madam,\", 10, 35);\r\n\r\n    doc.text(\"Gentle reminder that you have one or more open invoices on your account. Please\", 10, 50);\r\n    doc.text(\"get back to us with an expected date of payment. If you have any specific issue\", 10, 58);\r\n    doc.text(\"with the invoice(s), please let us know so that we can address it at the earliest.\", 10, 66);\r\n    doc.text(\"Please find the details of the invoices below:\", 10, 81);\r\n\r\n    autoTable(doc, {\r\n        html: '#correspondence-table',\r\n        theme: 'striped',\r\n        styles: {\r\n            fontSize: 12\r\n        },\r\n        margin: {\r\n            left: 10,\r\n        },\r\n        startY: 95\r\n    });\r\n\r\n    var finalY = doc.lastAutoTable.finalY;\r\n    var pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n    doc.text(\"In case you have already made a payment for the above items, please send us the \", 10, finalY + 15);\r\n    doc.text(\"details to ensure the payment is posted.\", 10, finalY + 23);\r\n    doc.text(\"Let us know if we can be of any further assistance. Looking forward to hearing from you.\", 10, finalY + 31);\r\n\r\n    doc.text(\"Kind Regards,\", 10, finalY + 46);\r\n    doc.text(\"D5D0Ds\", 10, finalY + 54);\r\n    doc.text(\"Phone : XXXXXXXXXX\", 10, finalY + 62);\r\n    doc.text(\"Fax : --\", 10, finalY + 70);\r\n    doc.text(\"Email : XXXXXXX@XXXX.XX.XX\", 10, finalY + 78);\r\n    doc.text(\"HighRadius\", 10, finalY + 86);\r\n\r\n    doc.save('template2.pdf');\r\n}\r\n\r\nexport const tablePDF = (templateData, tempNum, total) => {\r\n    if (tempNum === 1) {\r\n        templateOne(templateData, total)\r\n    } else {\r\n        templateTwo(templateData)\r\n    }\r\n}\r\n","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateOne.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateTwo.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\SnackBar.js",["141"],"import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport WarningSVG from '../assets/Path 18298.svg'\r\n\r\nexport default function PositionedSnackbar({ open = false, handleClose, error }) {\r\n    const [state, setState] = React.useState({\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n    });\r\n\r\n    const { vertical, horizontal } = state;\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={open}\r\n                onClose={handleClose}\r\n                key={vertical + horizontal}\r\n            >\r\n                <div\r\n                    style={{\r\n                        color: '#ffffff',\r\n                        // width: 'auto',\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        fontSize: '0.85rem',\r\n                        background: '#21303B',\r\n                        borderRadius: '10px',\r\n                        borderLeft: '2px solid red',\r\n                    }}\r\n                >\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        width: '20rem'\r\n                    }}>\r\n                        <img src={WarningSVG} style={{ paddingLeft: '0.3rem', paddingRight: '0.3rem' }} alt=\"WarningSVG\" />\r\n                        <p>{error}</p>\r\n                    </div>\r\n                    <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </div>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}","D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TableRowOptimized.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\utils\\formatter.js",[],"D:\\HighRadius\\d5d0ds\\frontend\\src\\components\\TemplateTable.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":12,"column":36,"nodeType":"148","messageId":"149","endLine":12,"endColumn":48},{"ruleId":"150","severity":1,"message":"151","line":133,"column":8,"nodeType":"152","endLine":133,"endColumn":16,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":137,"column":8,"nodeType":"152","endLine":137,"endColumn":10,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"154","line":79,"column":8,"nodeType":"152","endLine":79,"endColumn":10,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":123,"column":8,"nodeType":"152","endLine":123,"endColumn":10,"suggestions":"158"},{"ruleId":"146","severity":1,"message":"159","line":85,"column":9,"nodeType":"148","messageId":"149","endLine":85,"endColumn":19},{"ruleId":"146","severity":1,"message":"160","line":8,"column":19,"nodeType":"148","messageId":"149","endLine":8,"endColumn":27},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'checkDueDate' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checked.length', 'dispatch', and 'page'. Either include them or remove the dependency array. You can also do a functional update 'setPageCount(p => ...)' if you only need 'page' in the 'setPageCount' call.","ArrayExpression",["163"],"React Hook React.useEffect has a missing dependency: 'selected'. Either include it or remove the dependency array.",["164"],["165"],"React Hook React.useEffect has missing dependencies: 'invoiceData' and 'selected'. Either include them or remove the dependency array.",["166"],"'pageHeight' is assigned a value but never used.","'setState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},{"desc":"172","fix":"173"},"Update the dependencies array to be: [checked.length, dispatch, page, search]",{"range":"174","text":"175"},"Update the dependencies array to be: [selected]",{"range":"176","text":"177"},{"range":"178","text":"177"},"Update the dependencies array to be: [invoiceData, selected]",{"range":"179","text":"180"},[4009,4017],"[checked.length, dispatch, page, search]",[3838,3840],"[selected]",[2267,2269],[3562,3564],"[invoiceData, selected]"]